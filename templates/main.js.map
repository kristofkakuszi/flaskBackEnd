{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/login/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/landing/index.ts","./src/app/register/index.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/home/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;;;;;AASjD,MAAM,iBAAiB;IAE1B,UAAU;IACV,YAAoB,WAAuB,EAAU,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAEnE,iBAAY,GAAG,IAAI,wDAAS,CAAC;YAEzB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SACpC,CAAC,CAAC;IAPoE,CAAC;IASxE,UAAU;QACN,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CACnE,CAAC,MAAM,EAAE,EAAE;YACP,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,CAAC,CACJ;IACL,CAAC;;kFApBQ,iBAAiB;iGAAjB,iBAAiB;QCV9B,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACzB,4DAAM;QAGN,0EAEI;QAAA,uEACI;QAAA,uEAGJ;QAAA,4DAAM;QACN,uEACI;QAAA,uEAGJ;QAAA,4DAAM;QACN,uEACI;QAAA,wEAGJ;QAAA,4DAAM;QACN,8EAEqC;QADjC,gJAAY,gBAAY,IAAC,kFAAU,gBAAY,IAAtB;QACQ,oEAAQ;QAAA,4DAAS;QAE1D,4DAAO;QAIP,yEAAkC;QAAA,qFAAyB;QAAA,yEAChC;QAAA,sEAAU;QAAA,4DAAI;QAAA,4DAAI;QAC7C,sEAEM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,sEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;;QAtCuB,0DAA0B;QAA1B,uFAA0B;QAmBxB,0DAAgC;QAAhC,6FAAgC;;;;;;;;;;;;;;;;;;;;AC3BzD,MAAM,aAAa;;0EAAb,aAAa;6FAAb,aAAa;QCF1B,6EAGI;QAAA,yEACI;QAAA,yEAEI;QAAA,yEACI;QAAA,uEAAuB;QAAA,gEAAK;QAAA,4DAAI;QACpC,4DAAM;QACN,oEAEM;QACN,yEACI;QAAA,uEAA0B;QAAA,uEAAY;QAAA,4DAAI;QAC9C,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAU;;;;;;;;;;;;;;ACnBV;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACT5D,MAAM,gBAAgB,CAAC,qBAAqB;IADnD;QAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;UA2BE;QACF,iBAAY,GAAG,IAAI,CAAC;KASvB;IAPG,cAAc,CAAC,KAAK;QAEhB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IACD,QAAQ;IAER,CAAC;;gFAtCQ,gBAAgB,CAAC,qBAAqB;gGAAtC,gBAAgB,CAAC,qBAAqB;QCNnD,yEAEI;QAAA,qEAAI;QAAA,oFAAyB;QAAA,4DAAK;QAqBlC,2EACA;QADmB,+IAAU,0BAAsB,IAAC;QAApD,4DACA;QAAA,4EAAyC;QAAnB,wJAAkB;QAAC,iEAAM;QAAA,4DAAS;QAoB5D,4DAAM;;;;;;;;;;;;;;AC5CN;AAAA;AAAA;AAAA;AAAkC;;;;;;;;;;;;;;;;;;;ACS3B,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;KACf;;wEAFY,YAAY;4FAAZ,YAAY;QCFzB,2EAA+B;;;;;;;;;;;;;;ACN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AACQ;AAEsB,CAAW,cAAc;AAInD;AACF;AAER;AACE;AACM;AACF;;;AAqBtC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,0DAAW;YACX,6DAAgB;YAChB,kEAAmB;YACnB,qEAAgB;SACjB;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,mDAAa;QACb,qDAAc;QACd,2DAAiB;QACjB,yDAAgB,aAIhB,uEAAa;QACb,0DAAW,iEAEX,kEAAmB;QACnB,qEAAgB;;;;;;;;;;;;;AC/BpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEhB;AACE;AACM;AACF;AAE7C,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAa,EAAE;IACtC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qDAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2DAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,yDAAgB,EAAE;IAEhD,6BAA6B;IAC7B,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CACjC,CAAC;AAEK,MAAM,gBAAgB,GAAG,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;ACjB7D;AAAA;AAAA;AAAA;AAAoC;;;;;;;;;;;;;ACApC;AAAA;AAAA;AAAA;AAAqC;;;;;;;;;;;;;ACCrC;AAAA;AAAA;AAAA;AAAA;AAAwD;;;;AASjD,MAAM,cAAc;IAJ3B;QAMI,cAAS,GAAG,IAAI,wDAAS,CAAC;YAEtB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAChC,CAAC,CAAC;KAkBN;IAhBG,OAAO;QACH,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IACtC,CAAC;;4EAVQ,cAAc;8FAAd,cAAc;QCV3B,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,iEAAK;QAAA,4DAAK;QAClB,4DAAM;QAEN,2EAGI;QAH0B,2IAAY,aAAS,IAAC;QAGhD,uEACI;QAAA,wEAGJ;QAAA,4DAAM;QACN,2EACI;QAAA,wEAEJ;QAAA,4DAAM;QAIN,8EACgD;QAAA,iEAAK;QAAA,4DAAS;QAElE,4DAAO;QA0BP,yEAAkC;QAAA,mFAAuB;QAAA,yEAC9B;QAAA,yEAAa;QAAA,4DAAI;QAAA,4DAAI;QAChD,sEAEM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;;QAtDuB,2DAAuB;QAAvB,oFAAuB;QAgBP,0DAA6B;QAA7B,0FAA6B;;;;;;;;;;;;;;AC7B3E;AAAA;AAAA;AAAA;AAAiC;;;;;;;;;;;;;;;;;;;ACAc;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';                                                       //ez illetve\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";              //ez is kell ahhoz hogy mukodjon a post\r\n\r\n@Component({\r\n    templateUrl: 'register.component.html'\r\n})\r\nexport class RegisterComponent {\r\n\r\n    //innentol\r\n    constructor(private httpService: HttpClient, private router: Router) { }\r\n\r\n    registerForm = new FormGroup({\r\n\r\n        username: new FormControl(''),\r\n        inpPassword: new FormControl(''),\r\n        inpPassword1: new FormControl(''),\r\n    });\r\n\r\n    onRegister() {\r\n        console.warn(this.registerForm.value)\r\n        this.httpService.post(\"/onRegister\", this.registerForm.value).subscribe(\r\n            (status) => {\r\n                console.warn(status);\r\n                this.router.navigate(['login']);\r\n            }\r\n        )\r\n    }\r\n    //idaig\r\n\r\n\r\n    /*\r\n    registerForm = new FormGroup({\r\n\r\n        username: new FormControl(''),\r\n        inpPassword: new FormControl(''),\r\n        inpPassword1: new FormControl(''),\r\n    });\r\n\r\n    onRegister() {\r\n        console.warn(this.registerForm.value)\r\n    }\r\n    */\r\n\r\n}","<main class=\"d-flex align-items-center min-vh-100 py-3 py-md-0\">\r\n    <div class=\"container\">\r\n        <div class=\"card login-card\">\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"card-body\">\r\n                        <div class=\"brand-wrapper\">\r\n                            <h1>Registration</h1>\r\n                        </div>\r\n\r\n\r\n                        <form [formGroup]=\"registerForm\">\r\n\r\n                            <div>\r\n                                <input type=\"username\" id=\"username\" class=\"form-control\" placeholder=\"Username\"\r\n                                    formControlName=\"username\" required>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"password\" id=\"inpPassword\" class=\"form-control\" placeholder=\"Password\"\r\n                                    formControlName=\"inpPassword\" required>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"password\" id=\"inpPassword1\" class=\"form-control\"\r\n                                    formControlName=\"inpPassword1\" placeholder=\"Password again\" required>\r\n\r\n                            </div>\r\n                            <button class=\"btn btn-lg btn-primary btn-block btn-login text-uppercase  mb-2\"\r\n                                (ngSubmit)=\"onRegister()\" (click)=\"onRegister()\" type=\"submit\"\r\n                                [disabled]=\"!registerForm.valid\">Register</button>\r\n\r\n                        </form>\r\n\r\n\r\n\r\n                        <p class=\"login-card-footer-text\">Already have an account? <a routerLink=\"/login\"\r\n                                class=\"text-reset\">Login here</a></p>\r\n                        <nav class=\"login-card-footer-nav\">\r\n\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <img src=\"assets/pic/regist.png\" alt=\"login\" class=\"login-card-img\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { Component } from '@angular/core';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent { }","<!--<h1>Home Page</h1>-->\r\n<section class=\"homepage\">\r\n\r\n\r\n    <div class=\"container h-100\">\r\n        <div class=\"row h-100 justify-content-center align-items-center\">\r\n\r\n            <div class=\"col col-4\">\r\n                <a routerLink=\"/login\">Login</a>\r\n            </div>\r\n            <div class=\"col col-2\">\r\n\r\n            </div>\r\n            <div class=\"col col-4\">\r\n                <a routerLink=\"/register\">Registration</a>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({ templateUrl: 'landing.component.html' })\r\nexport class LandingComponent /*implements OnInit*/ {\r\n\r\n    /*\r\n    SERVER_URL = \"http://localhost:4200/landing\";\r\n    uploadForm: FormGroup;\r\n    constructor(private formBuilder: FormBuilder, private httpClient: HttpClient) { }\r\n\r\n    ngOnInit() {\r\n        this.uploadForm = this.formBuilder.group({\r\n            profile: ['']\r\n        });\r\n    }\r\n\r\n    onFileSelect(event) {\r\n        if (event.target.files.length > 0) {\r\n            const file = event.target.files[0];\r\n            this.uploadForm.get('profile').setValue(file);\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        const formData = new FormData();\r\n        formData.append('file', this.uploadForm.get('profile').value);\r\n\r\n        this.httpClient.post<any>(this.SERVER_URL, formData).subscribe(\r\n            (res) => console.log(res),\r\n            (err) => console.log(err)\r\n        );\r\n    }\r\n    */\r\n    selectedFile = null;\r\n\r\n    onFileSelected(event) {\r\n\r\n        this.selectedFile = event.target.files[0];\r\n    }\r\n    onUpload() {\r\n\r\n    }\r\n}","<div class=\"doboz\">\r\n\r\n    <h2>Upload your pictures here</h2>\r\n\r\n    <!--\r\n    <div class=\"form-group LandingPage1\">\r\n        <label for=\"name\" class=\"name\">Name:</label>\r\n        <br>\r\n        <div class=\"form-group col-sm-2\">\r\n            <input type=\"name\" class=\"form-control\" id=\"name\" placeholder=\"\">\r\n        </div>\r\n\r\n        <p>Choose File:</p>\r\n        <p>Lehet nem is kell name</p>\r\n        <label for=\"file\">Choose File</label>\r\n        <input type=\"file\" id=\"file\" name=\"inputFile\" accept=\".png,.jpg,.jpeg\">\r\n\r\n        <div class=\"mt-3\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n        </div>\r\n    </div>\r\n-->\r\n\r\n    <input type=\"file\" (change)=\"onFileSelected($event)\">\r\n    <button type=\"button\" (click)=\"onUpload\">Upload</button>\r\n\r\n    <!--\r\n    <div>\r\n        <form [formGroup]=\"uploadForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div>\r\n                <input type=\"file\" name=\"profile\" (change)=\"onFileSelect($event)\" />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Upload</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>","export * from './login.component';","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<!-- nav -->\n\n<!-- <a routerLink=\"/\">Home</a> -->\n\n\n<!-- ide olyat lehet rakni ami az összes lapon rajta lesz pl nabvar lol-->\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from \"@angular/forms\";\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';           //posthoz kell\n\n\n\nimport { appRoutingModule } from './app.routing';\nimport { AppComponent } from './app.component';\n\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\nimport { RegisterComponent } from './register';\nimport { LandingComponent } from './landing';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    LandingComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    appRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home';\r\nimport { LoginComponent } from './login';\r\nimport { RegisterComponent } from './register';\r\nimport { LandingComponent } from './landing';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'landing', component: LandingComponent },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);","export * from './landing.component';","export * from './register.component';","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n    templateUrl: 'login.component.html'\r\n})\r\n\r\nexport class LoginComponent {\r\n\r\n    loginForm = new FormGroup({\r\n\r\n        username: new FormControl(''),\r\n        password: new FormControl(''),\r\n    });\r\n\r\n    onLogin() {\r\n        console.warn(this.loginForm.value)\r\n    }\r\n\r\n    /*\r\n    username = new FormControl('');\r\n\r\n    password = new FormControl('');\r\n\r\n    onLogin() {\r\n        console.warn(this.username.value)\r\n        console.warn(this.password.value)\r\n    }\r\n    */\r\n\r\n\r\n}\r\n","<main class=\"d-flex align-items-center min-vh-100 py-3 py-md-0\">\r\n    <div class=\"container\">\r\n        <div class=\"card login-card\">\r\n            <div class=\"row no-gutters\">\r\n                <div class=\"col-md-5\">\r\n                    <img src=\"assets/pic/login.jpg\" alt=\"login\" class=\"login-card-img\">\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n                    <div class=\"card-body\">\r\n                        <div class=\"brand-wrapper\">\r\n                            <h1>Login</h1>\r\n                        </div>\r\n\r\n                        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\r\n\r\n\r\n                            <div>\r\n                                <input type=\"text\" id=\"username\" placeholder=\"Username\" class=\"form-control\"\r\n                                    formControlName=\"username\" required>\r\n\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\"\r\n                                    formControlName=\"password\" required>\r\n                            </div>\r\n\r\n\r\n\r\n                            <button class=\"btn btn-lg btn-primary btn-block btn-login text-uppercase  mb-2\"\r\n                                type=\"submit\" [disabled]=\"!loginForm.valid\">Login</button>\r\n\r\n                        </form>\r\n\r\n\r\n                        <!--\r\n                         <form (ngSubmit)=\"onLogin()\">\r\n\r\n                            <div>\r\n                                <input type=\"text\" id=\"username\" placeholder=\"Username\" class=\"form-control\"\r\n                                    [formControl]=\"username\" required>\r\n\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\"\r\n                                    [formControl]=\"password\" required>\r\n                            </div>\r\n\r\n\r\n\r\n                            <button class=\"btn btn-lg btn-primary btn-block btn-login text-uppercase  mb-2\"\r\n                                type=\"submit\" [disabled]=\"!username.valid\" [disabled]=\"!password.valid\">Login</button>\r\n\r\n                        </form>\r\n                        -->\r\n\r\n\r\n\r\n                        <p class=\"login-card-footer-text\">Don't have an account? <a routerLink=\"/register\"\r\n                                class=\"text-reset\">Register here</a></p>\r\n                        <nav class=\"login-card-footer-nav\">\r\n\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","export * from './home.component';","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}